/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

package com.gllllepulla.plugin.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;

import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static com.intellij.psi.TokenType.WHITE_SPACE;
import static com.gllllepulla.plugin.psi.AsnTypes.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>AsnLexer.flex</tt>
 */
public class AsnLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [11, 6, 4]
   * Total runtime size is 8256 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[(ZZ_CMAP_Z[ch>>10]<<6)|((ch>>4)&0x3f)]<<4)|(ch&0xf)];
  }

  /* The ZZ_CMAP_Z table has 1088 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\1\2\2\1\3\1\4\1\2\1\5\1\6\2\2\1\7\1\10\34\2\1\11\1\12\23\2\1\13\1\14"+
    "\1\2\1\15\1\2\1\16\2\2\1\17\56\2\1\20\4\2\1\21\u03c5\2");

  /* The ZZ_CMAP_Y table has 1152 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\1\1\11\1\12\1\13\1\14\1\15\1\16\3"+
    "\17\1\20\1\21\2\17\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\17\1\31\3\17\1\32"+
    "\1\33\4\15\1\34\1\15\14\1\1\35\1\36\1\37\1\40\1\15\1\41\1\42\1\17\1\43\3\13"+
    "\3\15\2\17\1\44\3\17\1\45\6\17\1\46\1\13\1\47\1\50\1\15\1\51\161\1\2\13\1"+
    "\52\55\1\5\13\1\53\50\1\1\11\37\1\1\54\7\1\2\15\1\55\3\1\1\56\1\57\1\15\1"+
    "\60\6\1\11\17\1\61\6\17\1\62\1\63\2\62\1\63\1\64\1\62\1\65\3\51\1\66\1\67"+
    "\1\70\1\71\1\67\1\72\1\1\1\73\2\1\1\74\12\1\1\75\1\76\1\77\1\100\1\101\3\1"+
    "\1\102\47\1\2\13\1\103\2\15\1\104\1\105\1\106\6\17\1\107\1\110\2\15\1\111"+
    "\55\1\1\11\143\1\2\17\1\112\1\1\1\17\1\113\10\1\1\114\1\115\3\17\1\116\1\117"+
    "\1\120\1\121\1\122\3\1\1\123\63\1\2\15\1\60\1\124\5\15\64\1\1\125\1\126\100"+
    "\1\1\46\1\127\1\50\1\60\12\1\2\13\1\130\2\15\6\1\2\13\1\131\1\15\1\55\70\1"+
    "\3\13\1\132\3\15\1\133\72\1\2\13\2\15\62\1\1\13\1\134\1\15\1\135\1\136\1\137"+
    "\1\62\1\13\1\140\1\141\1\142\1\143\1\34\1\13\1\134\1\15\1\144\1\145\1\15\1"+
    "\146\1\147\1\150\1\151\1\13\1\152\1\15\1\13\1\134\1\15\1\135\1\136\1\15\1"+
    "\62\1\13\1\140\1\151\1\13\1\152\1\15\1\13\1\134\1\15\1\153\1\13\1\150\1\154"+
    "\1\155\1\156\1\15\1\157\1\13\1\160\1\104\1\161\1\103\1\15\1\162\1\13\1\163"+
    "\1\15\1\164\23\1\2\13\1\140\1\15\1\165\53\1");

  /* The ZZ_CMAP_A table has 1888 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\4\1\2\2\1\1\3\22\0\1\46\1\0\1\15\3\0\1\104\1\0\1\74\1\75\1\7\1\0\1"+
    "\105\1\5\1\107\1\6\5\11\1\67\2\11\1\73\1\11\1\102\1\106\1\0\1\103\2\0\1\111"+
    "\1\25\1\36\1\30\1\40\1\22\1\33\1\37\1\42\1\20\2\10\1\26\1\41\1\17\1\32\1\27"+
    "\1\35\1\23\1\24\1\31\1\16\1\21\1\44\1\34\1\45\1\43\1\100\1\0\1\101\3\0\1\60"+
    "\1\61\1\54\1\64\1\51\1\12\1\57\1\71\1\53\2\12\1\62\1\50\1\56\1\65\1\70\1\12"+
    "\1\52\1\66\1\55\1\47\1\72\1\12\1\63\1\12\1\112\1\76\1\110\1\77\7\0\1\1\12"+
    "\0\1\4\24\0\1\13\12\0\27\14\1\0\7\14\30\13\1\0\10\13\1\14\1\13\1\14\1\13\1"+
    "\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14"+
    "\1\13\1\14\1\13\1\14\2\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13"+
    "\1\14\1\13\1\14\1\13\1\14\2\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14"+
    "\1\13\1\14\1\13\1\14\1\13\2\14\1\13\1\14\1\13\1\14\3\13\2\14\1\13\1\14\1\13"+
    "\2\14\1\13\3\14\2\13\4\14\1\13\2\14\1\13\3\14\3\13\2\14\1\13\2\14\1\13\1\14"+
    "\1\13\1\14\1\13\2\14\1\13\1\14\2\13\1\14\1\13\2\14\1\13\3\14\1\13\1\14\1\13"+
    "\2\14\2\13\1\0\1\14\3\13\4\0\1\14\1\0\1\13\1\14\1\0\1\13\1\14\1\0\1\13\1\14"+
    "\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\2\13"+
    "\1\14\2\13\1\14\1\0\1\13\1\14\1\13\3\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13"+
    "\1\14\1\13\1\14\7\13\2\14\1\13\2\14\2\13\1\14\1\13\4\14\1\13\1\14\1\13\1\14"+
    "\1\13\1\14\1\13\1\14\5\13\1\0\13\13\1\14\1\13\1\14\1\13\2\0\1\14\1\13\3\0"+
    "\3\13\1\0\1\14\6\0\1\14\1\0\3\14\1\0\1\14\1\0\2\14\1\13\21\14\1\0\11\14\23"+
    "\13\1\14\2\13\3\14\3\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\5\13\1\14\1\13"+
    "\1\0\1\14\1\13\2\14\2\13\4\14\1\13\10\0\1\14\1\13\1\14\1\13\1\14\1\13\2\14"+
    "\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\2\13\1\0\26\14"+
    "\12\0\27\13\10\0\6\14\1\0\1\14\5\0\1\14\2\0\6\14\2\0\6\13\2\0\11\13\7\0\14"+
    "\13\17\0\15\13\1\0\22\13\5\0\1\14\1\13\1\14\1\13\1\14\11\13\1\14\11\13\10"+
    "\14\6\13\2\0\6\14\2\0\10\13\1\0\1\14\1\0\1\14\1\0\1\14\1\0\1\14\16\13\2\0"+
    "\5\13\1\0\2\13\4\14\2\0\1\13\3\0\3\13\1\0\2\13\4\14\4\0\4\13\2\0\2\13\4\14"+
    "\4\0\10\13\5\14\3\0\13\4\15\0\2\1\5\0\1\4\17\0\1\4\2\0\1\14\4\0\1\14\2\0\1"+
    "\13\3\14\2\13\3\14\1\13\1\0\1\14\3\0\5\14\6\0\1\14\1\0\1\14\1\0\1\14\1\0\4"+
    "\14\1\0\1\13\4\14\1\13\4\0\1\13\2\0\2\13\2\14\5\0\1\14\4\13\4\0\1\13\4\0\1"+
    "\14\1\13\13\0\17\14\1\0\17\13\1\0\1\14\1\13\3\14\2\13\1\14\1\13\1\14\1\13"+
    "\1\14\1\13\4\14\1\13\1\14\2\13\1\14\6\13\2\0\3\14\1\13\1\14\2\13\6\0\1\14"+
    "\1\13\1\14\1\13\3\0\1\14\1\13\14\0\6\13\1\0\1\13\5\0\1\13\2\0\1\14\1\13\1"+
    "\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\2\0\1\14\1\13\1"+
    "\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\6\0\1\14\1\13\1\14\1\13\1"+
    "\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\3\13\1\14\1\13\1\14\1\13\1\14"+
    "\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\0\10\13\1\14\1\13\1\14\1\13"+
    "\2\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\3\0\1\14\1\13\1\14\1\13"+
    "\1\0\1\14\1\13\1\14\3\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13"+
    "\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\1\14\1\13\5\14\1\0\5\14\1\13\1\14"+
    "\1\13\22\0\1\13\5\0\6\13\12\0\7\13\14\0\5\13\10\0\13\14\5\0\10\14\10\13\4"+
    "\14\4\0\10\13\3\14\15\0\3\13\15\0\12\14\12\13\32\14\7\13\1\0\12\13\2\14\32"+
    "\13\1\14\1\0\2\14\2\0\1\14\2\0\2\14\2\0\4\14\1\0\10\14\4\13\1\0\1\13\1\0\7"+
    "\13\2\14\1\0\4\14\2\0\10\14\1\0\7\14\1\0\12\13\2\14\1\0\4\14\1\0\5\14\1\0"+
    "\1\14\3\0\7\14\1\0\32\13\12\14\20\13\2\0\10\14\13\13\1\0\6\13\31\14\1\0\11"+
    "\13\1\0\6\13\11\14\1\0\20\13\12\14\11\13\1\0\6\13\11\14\1\0\11\13\1\0\6\13"+
    "\1\14\1\13\4\0\4\13\14\0");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\2\2\1\3\1\1\1\4\1\5\1\6"+
    "\1\4\1\7\22\4\1\10\1\11\1\12\1\13\1\14"+
    "\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24"+
    "\1\25\1\26\2\0\1\27\1\0\1\5\1\0\1\30"+
    "\2\4\1\27\1\4\1\27\3\4\1\27\11\4\1\27"+
    "\7\4\1\27\3\4\1\31\6\4\2\27\6\4\1\0"+
    "\1\32\1\26\1\33\1\0\1\34\3\4\1\27\1\4"+
    "\1\27\2\4\1\0\1\4\2\27\1\4\1\35\4\4"+
    "\1\36\2\4\1\37\2\4\1\27\10\4\1\27\1\40"+
    "\10\4\2\27\3\4\1\41\1\42\1\4\1\43\1\44"+
    "\3\4\1\0\1\27\1\45\1\27\2\4\1\0\2\4"+
    "\2\27\4\4\1\46\1\47\4\4\1\27\4\4\1\50"+
    "\1\51\1\52\1\4\1\27\2\4\1\53\1\4\1\0"+
    "\3\4\2\27\3\4\1\54\1\55\2\4\1\27\1\0"+
    "\2\27\2\4\1\27\2\4\2\27\10\4\1\27\1\56"+
    "\6\4\1\27\2\4\1\57\1\0\1\60\1\4\3\27"+
    "\5\4\1\61\4\27\2\4\1\27\2\4\2\27\5\4"+
    "\1\62\2\4\1\27\3\4\1\63\2\4\1\27\1\4"+
    "\2\0\1\4\3\27\5\4\1\64\3\27\1\4\1\65"+
    "\1\27\1\4\1\66\2\27\2\4\1\67\3\4\1\70"+
    "\1\27\5\4\1\27\1\4\2\0\1\71\3\27\2\4"+
    "\1\72\2\4\3\27\1\73\1\27\1\74\2\27\1\4"+
    "\1\75\1\76\1\77\1\4\1\27\5\4\1\27\1\100"+
    "\2\0\4\27\1\101\2\4\1\102\3\27\1\103\2\27"+
    "\2\4\1\27\5\4\1\27\2\0\1\104\3\27\1\4"+
    "\1\105\1\106\4\27\1\107\1\4\1\27\1\4\1\110"+
    "\1\0\2\4\1\27\1\0\1\111\3\27\1\4\4\27"+
    "\1\112\1\27\1\4\1\0\1\113\1\4\1\27\1\0"+
    "\3\27\1\114\5\27\1\4\1\0\1\4\1\27\1\115"+
    "\4\27\1\116\1\27\1\117\1\27\1\4\1\0\1\4"+
    "\1\27\1\120\1\27\1\121\1\27\1\122\1\27\1\4"+
    "\1\0\1\4\1\123\1\27\1\124\1\125\1\4\1\0"+
    "\1\126\1\127\1\130\1\131";

  private static int [] zzUnpackAction() {
    int [] result = new int[456];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\113\0\113\0\226\0\341\0\u012c\0\u0177\0\u01c2"+
    "\0\u020d\0\u0258\0\u02a3\0\u02ee\0\u0339\0\u0384\0\u03cf\0\u041a"+
    "\0\u0465\0\u04b0\0\u04fb\0\u0546\0\u0591\0\u05dc\0\u0627\0\u0672"+
    "\0\u06bd\0\u0708\0\u0753\0\u079e\0\u07e9\0\113\0\113\0\113"+
    "\0\113\0\113\0\113\0\u0834\0\113\0\113\0\113\0\u087f"+
    "\0\113\0\113\0\113\0\u08ca\0\u0915\0\u0960\0\u09ab\0\u09f6"+
    "\0\u0a41\0\u02a3\0\113\0\u0a8c\0\u0ad7\0\u0b22\0\u0b6d\0\u0bb8"+
    "\0\u0c03\0\u0c4e\0\u0c99\0\u0ce4\0\u0d2f\0\u0d7a\0\u0dc5\0\u0e10"+
    "\0\u0e5b\0\u0ea6\0\u0ef1\0\u0f3c\0\u0f87\0\u0fd2\0\u101d\0\u1068"+
    "\0\u10b3\0\u10fe\0\u1149\0\u1194\0\u11df\0\u122a\0\u1275\0\u12c0"+
    "\0\u130b\0\u0177\0\u1356\0\u13a1\0\u13ec\0\u1437\0\u1482\0\u14cd"+
    "\0\u1518\0\u1563\0\u15ae\0\u15f9\0\u1644\0\u168f\0\u16da\0\u1725"+
    "\0\u1770\0\113\0\u17bb\0\u1806\0\u1851\0\u189c\0\u18e7\0\u1932"+
    "\0\u197d\0\u19c8\0\u1a13\0\u1a5e\0\u1aa9\0\u1af4\0\u1b3f\0\u1b8a"+
    "\0\u1bd5\0\u1c20\0\u1c6b\0\u0177\0\u1cb6\0\u1d01\0\u1d4c\0\u1d97"+
    "\0\u0177\0\u1de2\0\u1e2d\0\u0177\0\u1e78\0\u1ec3\0\u1f0e\0\u1f59"+
    "\0\u1fa4\0\u1fef\0\u203a\0\u2085\0\u20d0\0\u211b\0\u2166\0\u21b1"+
    "\0\u0177\0\u21fc\0\u2247\0\u2292\0\u22dd\0\u2328\0\u2373\0\u23be"+
    "\0\u2409\0\u2454\0\u249f\0\u24ea\0\u2535\0\u2580\0\u0177\0\u0177"+
    "\0\u25cb\0\113\0\u0915\0\u2616\0\u2661\0\u26ac\0\u26f7\0\u2742"+
    "\0\u0177\0\u278d\0\u27d8\0\u2823\0\u286e\0\u28b9\0\u2904\0\u294f"+
    "\0\u299a\0\u29e5\0\u2a30\0\u2a7b\0\u2ac6\0\u0177\0\u0177\0\u2b11"+
    "\0\u2b5c\0\u2ba7\0\u2bf2\0\u2c3d\0\u2c88\0\u2cd3\0\u2d1e\0\u2d69"+
    "\0\u2db4\0\u0177\0\u0177\0\u2dff\0\u2e4a\0\u2e95\0\u2ee0\0\u0177"+
    "\0\u2f2b\0\u2f76\0\u2fc1\0\u300c\0\u3057\0\u30a2\0\u30ed\0\u3138"+
    "\0\u3183\0\u31ce\0\u3219\0\u0177\0\u3264\0\u32af\0\u32fa\0\u3345"+
    "\0\u3390\0\u33db\0\u3426\0\u3471\0\u34bc\0\u3507\0\u3552\0\u359d"+
    "\0\u35e8\0\u3633\0\u367e\0\u36c9\0\u3714\0\u375f\0\u37aa\0\u37f5"+
    "\0\u3840\0\u388b\0\u0177\0\u38d6\0\u3921\0\u396c\0\u39b7\0\u3a02"+
    "\0\u3a4d\0\u3a98\0\u3ae3\0\u3b2e\0\u0177\0\u3b79\0\u0177\0\u3bc4"+
    "\0\u3c0f\0\u3c5a\0\u3ca5\0\u3cf0\0\u3d3b\0\u3d86\0\u3dd1\0\u3e1c"+
    "\0\u0177\0\u3e67\0\u3eb2\0\u3efd\0\u3f48\0\u3f93\0\u3fde\0\u4029"+
    "\0\u4074\0\u40bf\0\u410a\0\u4155\0\u41a0\0\u41eb\0\u4236\0\u4281"+
    "\0\u42cc\0\u0177\0\u4317\0\u4362\0\u43ad\0\u43f8\0\u4443\0\u448e"+
    "\0\u0177\0\u44d9\0\u4524\0\u456f\0\u45ba\0\u4605\0\u4650\0\u469b"+
    "\0\u46e6\0\u4731\0\u477c\0\u47c7\0\u4812\0\u485d\0\u48a8\0\u48f3"+
    "\0\u09ab\0\u493e\0\u4989\0\u49d4\0\u4a1f\0\u0177\0\u4a6a\0\u4ab5"+
    "\0\u0177\0\u4b00\0\u4b4b\0\u4b96\0\u4be1\0\u0177\0\u4c2c\0\u4c77"+
    "\0\u4cc2\0\u0177\0\u4d0d\0\u4d58\0\u4da3\0\u4dee\0\u4e39\0\u4e84"+
    "\0\u4ecf\0\u4f1a\0\u4f65\0\u4fb0\0\u0177\0\u4ffb\0\u5046\0\u5091"+
    "\0\u50dc\0\u5127\0\u0177\0\u5172\0\u51bd\0\u5208\0\u5253\0\u529e"+
    "\0\u0177\0\u52e9\0\u0177\0\u5334\0\u537f\0\u53ca\0\u0177\0\u0177"+
    "\0\u0177\0\u5415\0\u5460\0\u54ab\0\u54f6\0\u5541\0\u558c\0\u55d7"+
    "\0\u5622\0\u0177\0\u566d\0\u56b8\0\u5703\0\u574e\0\u5799\0\u57e4"+
    "\0\u0177\0\u582f\0\u587a\0\u0177\0\u58c5\0\u5910\0\u595b\0\u09ab"+
    "\0\u59a6\0\u59f1\0\u5a3c\0\u5a87\0\u5ad2\0\u5b1d\0\u5b68\0\u5bb3"+
    "\0\u5bfe\0\u5c49\0\u5c94\0\u5cdf\0\u5d2a\0\u09ab\0\u5d75\0\u5dc0"+
    "\0\u5e0b\0\u5e56\0\u0177\0\u09ab\0\u5ea1\0\u5eec\0\u5f37\0\u5f82"+
    "\0\u0177\0\u5fcd\0\u6018\0\u6063\0\u0177\0\u60ae\0\u60f9\0\u6144"+
    "\0\u618f\0\u61da\0\113\0\u6225\0\u6270\0\u62bb\0\u6306\0\u6351"+
    "\0\u639c\0\u63e7\0\u6432\0\u0177\0\u647d\0\u64c8\0\u6513\0\u0177"+
    "\0\u655e\0\u65a9\0\u65f4\0\u663f\0\u668a\0\u66d5\0\u0177\0\u6720"+
    "\0\u676b\0\u67b6\0\u6801\0\u684c\0\u6897\0\u68e2\0\u692d\0\u6978"+
    "\0\113\0\u69c3\0\u6a0e\0\u6a59\0\u6aa4\0\u09ab\0\u6aef\0\u09ab"+
    "\0\u6b3a\0\u6b85\0\u6bd0\0\u6c1b\0\u6c66\0\u09ab\0\u6cb1\0\u09ab"+
    "\0\u6cfc\0\u09ab\0\u6d47\0\u6d92\0\u6ddd\0\u6e28\0\u09ab\0\u6e73"+
    "\0\u09ab\0\u09ab\0\u6ebe\0\u6f09\0\u0177\0\u09ab\0\u0177\0\113";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[456];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\4\1\3\1\5\1\6\1\2\1\7"+
    "\1\10\2\11\1\12\1\13\1\14\1\15\1\16\1\17"+
    "\1\20\1\21\1\22\1\23\1\7\1\24\1\25\1\26"+
    "\1\27\1\30\2\7\1\31\1\32\1\33\1\34\2\7"+
    "\1\35\1\7\1\3\20\11\1\10\3\11\1\10\1\36"+
    "\1\37\1\40\1\41\1\42\1\43\1\44\1\2\1\45"+
    "\1\46\1\47\1\50\1\51\1\52\1\11\115\0\1\53"+
    "\115\0\1\54\3\0\1\10\55\0\1\10\3\0\1\10"+
    "\26\0\1\55\110\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\30\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\6\0\1\60\2\0\1\61\55\0"+
    "\1\61\3\0\1\61\24\0\1\11\2\0\5\11\1\0"+
    "\30\11\1\0\25\11\16\0\1\11\5\0\1\12\2\0"+
    "\1\12\3\0\1\12\1\0\30\12\45\0\15\62\1\63"+
    "\75\62\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\1\7\1\64\11\7\1\65\14\7\1\0"+
    "\7\57\1\66\10\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\1\67\27\7\1\0\1\70\17\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\1\7\1\71\5\7\1\72"+
    "\13\7\1\73\4\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\30\7\1\0\4\57\1\74\13\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\1\7\1\75"+
    "\14\7\1\76\11\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\4\7\1\77\23\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\2\7\1\100"+
    "\1\7\1\101\22\7\1\102\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\1\7\1\103\7\7\1\104"+
    "\16\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\5\7\1\105\22\7\1\0\3\57\1\106\14\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\10\7\1\107"+
    "\3\7\1\110\7\7\1\111\3\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\2\7\1\112\2\7"+
    "\1\113\1\7\1\114\17\7\1\115\1\0\2\57\1\116"+
    "\15\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\2\7"+
    "\1\117\6\7\1\120\1\121\2\7\1\122\12\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\5\7"+
    "\1\123\1\7\1\124\20\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\2\7\1\125\1\7\1\126"+
    "\7\7\1\127\6\7\1\130\4\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\30\7\1\0\2\57"+
    "\1\131\1\132\14\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\1\133\3\7\1\134\2\7\1\135\20\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\2\7"+
    "\1\136\4\7\1\137\20\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\2\7\1\140\25\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\102\0\1\141"+
    "\117\0\1\142\3\0\1\143\3\0\1\143\1\144\105\143"+
    "\7\55\1\145\103\55\5\0\1\56\2\0\2\56\1\57"+
    "\3\0\30\56\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\57\2\0\3\57\3\0\30\57\1\0"+
    "\25\57\16\0\1\57\1\146\3\0\107\146\11\0\1\61"+
    "\55\0\1\61\3\0\1\61\24\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\2\7\1\147\25\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\12\7\1\150\2\7\1\151\12\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\4\57\1\152\20\57\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\10\7\1\153\17\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\1\57\1\154\23\57\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\6\7\1\155\4\7\1\156\14\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\30\7\1\0\20\57"+
    "\1\157\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\11\7\1\160"+
    "\16\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\15\57"+
    "\1\161\1\57\1\162\5\57\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\1\163"+
    "\21\7\1\164\5\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\11\7\1\165\1\7\1\166\14\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\7\7\1\167\20\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\25\7\1\170\2\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\13\7\1\171"+
    "\3\7\1\172\10\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\1\7\1\173\26\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\27\7\1\174"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\11\7\1\175\16\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\2\7\1\176\25\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\57\2\0"+
    "\3\57\3\0\30\57\1\0\4\57\1\177\20\57\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\7\7\1\200\20\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\1\7\1\201\26\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\7\7\1\202\4\7\1\203\13\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\23\7\1\204\4\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\1\205\27\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\21\7\1\206\6\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\11\7\1\207\16\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\57\2\0\3\57\3\0\30\57\1\0\13\57\1\210"+
    "\11\57\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\22\7\1\211\5\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\13\7"+
    "\1\212\14\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\13\7\1\213\14\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\14\7\1\214\13\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\10\7\1\215\17\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\13\7\1\216\14\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\21\7\1\217"+
    "\6\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\14\7\1\220\13\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\11\7\1\221\16\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\7\57\1\222\15\57"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\11\57\1\223\13\57\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\5\7"+
    "\1\224\22\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\15\7\1\225\12\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\13\7\1\226\14\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\1\7\1\227\26\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\16\7\1\230\11\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\13\7\1\231"+
    "\14\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\103\0\1\232\7\0\1\143\3\0\107\143\1\144\3\0"+
    "\107\144\6\55\1\233\1\145\103\55\11\0\1\146\55\0"+
    "\1\146\3\0\1\146\24\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\3\7\1\234\13\7\1\235"+
    "\10\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\13\7\1\236\14\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\30\7\1\0\20\57\1\56"+
    "\3\57\1\237\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\23\57\1\240\1\57\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\10\7\1\241\17\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\2\57\1\242\22\57\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\13\7\1\243\14\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\4\7\1\244\23\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\56\2\0"+
    "\2\56\1\57\3\0\6\56\1\245\21\56\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\10\7\1\246"+
    "\3\7\1\247\13\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\2\57\1\250\22\57\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\4\57\1\251\20\57"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\23\7\1\252\4\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\10\7\1\253"+
    "\3\7\1\254\13\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\4\7\1\255\23\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\10\7\1\256"+
    "\17\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\4\7\1\257\23\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\1\260\27\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\13\7\1\261"+
    "\14\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\10\7\1\262\17\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\3\7\1\263\24\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\7\57\1\264\15\57"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\6\7\1\265\21\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\13\7\1\266"+
    "\14\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\5\7\1\267\22\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\2\7\1\270\25\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\4\7"+
    "\1\271\23\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\4\7\1\272\23\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\6\7\1\273\21\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\4\7\1\274\23\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\2\57\1\275\22\57\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\2\7"+
    "\1\276\25\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\4\7\1\277\23\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\23\7\1\300\4\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\6\7\1\301\21\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\30\7\1\302\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\2\7\1\303\25\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\10\7"+
    "\1\304\17\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\6\7\1\305\21\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\2\57\1\306\22\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\21\57"+
    "\1\307\3\57\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\7\7\1\310\20\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\2\7\1\311\4\7\1\312\20\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\4\7\1\313\23\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\24\7\1\314\3\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\4\7\1\315\23\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\1\316\27\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\30\7\1\0\4\57\1\317\13\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\56\2\0\2\56\1\57\3\0"+
    "\6\56\1\320\21\56\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\2\57\1\321\22\57\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\3\57\1\322\21\57"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\7\7\1\323\20\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\21\7\1\324"+
    "\6\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\56\2\0\2\56\1\57\3\0\30\56\1\0"+
    "\6\57\1\325\11\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\2\7\1\326\25\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\5\7\1\327\22\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\16\57\1\330\6\57"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\12\57\1\331\12\57\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\4\7"+
    "\1\332\23\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\2\7\1\333\25\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\5\7\1\334\22\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\5\7\1\335\22\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\4\7\1\336\23\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\7\7\1\337"+
    "\20\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\2\7\1\340\25\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\7\7\1\341\20\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\6\57\1\342\16\57"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\6\7\1\343\21\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\4\7\1\344"+
    "\2\7\1\345\20\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\7\7\1\346\20\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\12\7\1\347"+
    "\15\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\350\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\30\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\351\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\30\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\6\57\1\352\16\57\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\14\7"+
    "\1\353\13\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\13\7\1\354\14\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\4\7\1\355\23\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\24\0"+
    "\1\356\73\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\1\7\1\357\26\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\4\7\1\360\23\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\30\7\1\0\6\57\1\361\11\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\3\57\1\362\21\57\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\22\57\1\363\2\57"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\13\7\1\364\14\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\1\7\1\365"+
    "\26\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\1\366\27\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\367\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\30\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\5\7\1\370\22\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\4\7"+
    "\1\371\23\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\57\2\0\3\57\3\0\30\57\1\0"+
    "\1\57\1\372\23\57\16\0\1\57\5\0\1\56\2\0"+
    "\2\56\1\57\3\0\30\56\1\0\6\57\1\373\11\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\57\2\0"+
    "\3\57\3\0\30\57\1\0\3\57\1\374\21\57\16\0"+
    "\1\57\5\0\1\57\2\0\3\57\3\0\30\57\1\0"+
    "\4\57\1\375\20\57\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\1\7\1\376"+
    "\26\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\4\7\1\377\23\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\3\57\1\u0100\21\57\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\12\7\1\u0101\15\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\13\7\1\u0102\14\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\57\2\0"+
    "\3\57\3\0\30\57\1\0\6\57\1\u0103\16\57\16\0"+
    "\1\57\5\0\1\57\2\0\3\57\3\0\30\57\1\0"+
    "\13\57\1\u0104\11\57\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\5\7\1\u0105"+
    "\22\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\12\7\1\u0106\15\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\13\7\1\u0107\14\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\1\7"+
    "\1\u0108\26\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\1\7\1\u0109\26\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\16\7\1\u010a\11\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\12\7\1\u010b\15\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\13\7\1\u010c\14\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\57\2\0"+
    "\3\57\3\0\30\57\1\0\11\57\1\u010d\13\57\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\1\7\1\u010e\26\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\2\7\1\u010f\25\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\12\7\1\u0110\15\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\4\7\1\u0111\23\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\14\7\1\u0112"+
    "\13\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\2\7\1\u0113\25\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\2\57\1\u0114\22\57\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\1\7\1\u0115\26\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\30\7\1\u0116\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\31\0\1\u0117\66\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\7\7\1\u0118"+
    "\20\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\3\57"+
    "\1\u0119\21\57\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\11\57\1\u011a\13\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\4\57"+
    "\1\u011b\20\57\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\2\7\1\u011c\25\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\2\7\1\u011d\25\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\10\7\1\u011e\17\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\13\7\1\u011f"+
    "\14\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\6\7\1\u0120\21\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\2\57\1\u0121\22\57\16\0\1\57\5\0"+
    "\1\57\2\0\3\57\3\0\30\57\1\0\3\57\1\u0122"+
    "\21\57\16\0\1\57\5\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\17\57\1\u0123\5\57\16\0\1\57\5\0"+
    "\1\57\2\0\3\57\3\0\30\57\1\0\5\57\1\u0124"+
    "\17\57\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\12\7\1\u0125\15\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\5\7"+
    "\1\u0126\22\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\57\2\0\3\57\3\0\30\57\1\0"+
    "\4\57\1\u0127\20\57\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\2\7\1\u0128"+
    "\25\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\6\7\1\u0129\21\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\2\57\1\u012a\22\57\16\0\1\57\5\0"+
    "\1\57\2\0\3\57\3\0\30\57\1\0\2\57\1\u012b"+
    "\22\57\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\7\7\1\u012c\20\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\2\7"+
    "\1\u012d\25\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\6\7\1\u012e\21\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\7\7\1\u012f\20\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\12\7\1\u0130\15\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\7\7\1\u0131\20\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\4\7\1\u0132"+
    "\23\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\12\57"+
    "\1\u0133\12\57\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\13\7\1\u0134\14\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\1\7\1\u0135\26\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\13\7\1\u0136\14\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\15\7\1\u0137"+
    "\12\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\22\7\1\u0138\5\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\14\57\1\u0139\10\57\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\7\7\1\u013a\20\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\24\0\1\u013b\111\0\1\u013c\74\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\1\7"+
    "\1\u013d\26\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\57\2\0\3\57\3\0\30\57\1\0"+
    "\4\57\1\u013e\20\57\16\0\1\57\5\0\1\57\2\0"+
    "\3\57\3\0\30\57\1\0\13\57\1\u013f\11\57\16\0"+
    "\1\57\5\0\1\57\2\0\3\57\3\0\30\57\1\0"+
    "\5\57\1\u0140\17\57\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\14\7\1\u0141"+
    "\13\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\13\7\1\u0142\14\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\13\7\1\u0143\14\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\2\7"+
    "\1\u0144\25\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\7\7\1\u0145\20\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\4\57\1\u0146\20\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\11\57"+
    "\1\u0147\13\57\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\6\57\1\u0148\21\57\1\0\25\57\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\4\7\1\u0149\23\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\7\57\1\u014a\15\57\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\13\7\1\u014b\14\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\14\57\1\u014c\10\57\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\6\57\1\u014d\21\57\1\0\25\57"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\13\7\1\u014e\14\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\13\7\1\u014f"+
    "\14\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\10\7\1\u0150\17\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\4\7\1\u0151\23\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\13\7"+
    "\1\u0152\14\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\57\2\0\3\57\3\0\30\57\1\0"+
    "\13\57\1\u0153\11\57\16\0\1\57\5\0\1\u0154\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\30\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\2\7"+
    "\1\u0155\25\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\4\7\1\u0156\23\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\u0157\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\30\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\4\7\1\u0158"+
    "\23\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\6\57"+
    "\1\u0159\16\57\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\10\7\1\u015a\17\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\31\0"+
    "\1\u015b\101\0\1\u015c\77\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\7\57\1\u015d\15\57\16\0\1\57\5\0"+
    "\1\57\2\0\3\57\3\0\6\57\1\u015e\21\57\1\0"+
    "\4\57\1\u015f\20\57\16\0\1\57\5\0\1\57\2\0"+
    "\3\57\3\0\6\57\1\u0160\21\57\1\0\25\57\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\1\7\1\u0161\26\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\2\7\1\u0162\25\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\23\7\1\u0163\4\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\10\7\1\u0164\17\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\57\2\0"+
    "\3\57\3\0\30\57\1\0\7\57\1\u0165\15\57\16\0"+
    "\1\57\5\0\1\57\2\0\3\57\3\0\30\57\1\0"+
    "\13\57\1\u0166\11\57\16\0\1\57\5\0\1\57\2\0"+
    "\3\57\3\0\30\57\1\0\6\57\1\u0167\16\57\16\0"+
    "\1\57\5\0\1\57\2\0\3\57\3\0\30\57\1\0"+
    "\10\57\1\u0168\14\57\16\0\1\57\5\0\1\57\2\0"+
    "\3\57\3\0\6\57\1\u0169\21\57\1\0\25\57\16\0"+
    "\1\57\5\0\1\57\2\0\3\57\3\0\30\57\1\0"+
    "\6\57\1\u016a\16\57\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\4\7\1\u016b"+
    "\23\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\2\7\1\u016c\25\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\2\57\1\u016d\22\57\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\6\7\1\u016e\21\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\1\7\1\u016f\26\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\5\7\1\u0170"+
    "\22\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\22\7\1\u0171\5\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\1\7\1\u0172\26\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\6\57\1\u0173\21\57\1\0\25\57"+
    "\16\0\1\57\23\0\1\u0174\106\0\1\u0175\100\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\10\57\1\u0176\14\57"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\6\57\1\u0177\16\57\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\25\57\16\0\1\u0178"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\6\57"+
    "\1\u0179\16\57\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\14\7\1\u017a\13\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\4\7\1\u017b\23\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\10\57\1\u017c\14\57\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\6\57\1\u017d\21\57\1\0\25\57"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\3\57\1\u017e\21\57\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\6\57\1\u017f\16\57"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\3\57\1\u0180\21\57\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\22\7"+
    "\1\u0181\5\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\14\7\1\u0182\13\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\6\57\1\u0183\21\57\1\0\25\57\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\11\7\1\u0184\16\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\21\7\1\u0185\6\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\30\7"+
    "\1\u0186\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\7\7\1\u0187\20\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\13\7\1\u0188\14\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\57\2\0"+
    "\3\57\3\0\30\57\1\0\6\57\1\u0189\16\57\16\0"+
    "\1\57\20\0\1\u018a\131\0\1\u018b\60\0\1\57\2\0"+
    "\3\57\3\0\30\57\1\0\3\57\1\u018c\21\57\16\0"+
    "\1\57\5\0\1\57\2\0\3\57\3\0\30\57\1\0"+
    "\2\57\1\u018d\22\57\16\0\1\57\5\0\1\57\2\0"+
    "\3\57\3\0\30\57\1\0\3\57\1\u018e\21\57\16\0"+
    "\1\57\5\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\1\7\1\u018f\26\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\6\57\1\u0190\16\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\4\57"+
    "\1\u0191\20\57\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\3\57\1\u0192\21\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\4\57"+
    "\1\u0193\20\57\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\1\7\1\u0194\26\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\5\0"+
    "\1\57\2\0\3\57\3\0\30\57\1\0\6\57\1\u0195"+
    "\16\57\16\0\1\57\5\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\4\7\1\u0196\23\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\24\0\1\u0197"+
    "\73\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\27\7\1\u0198\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\7\2\0\1\7\1\56\1\57"+
    "\1\0\1\12\1\0\2\7\1\u0199\25\7\1\0\20\57"+
    "\1\56\3\57\1\56\16\0\1\57\5\0\1\57\2\0"+
    "\3\57\3\0\30\57\1\0\3\57\1\u019a\21\57\16\0"+
    "\1\57\17\0\1\u019b\100\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\4\57\1\u019c\20\57\16\0\1\57\5\0"+
    "\1\57\2\0\3\57\3\0\30\57\1\0\15\57\1\u019d"+
    "\7\57\16\0\1\57\5\0\1\57\2\0\3\57\3\0"+
    "\30\57\1\0\4\57\1\u019e\20\57\16\0\1\57\5\0"+
    "\1\7\2\0\1\7\1\56\1\57\1\0\1\12\1\0"+
    "\6\7\1\u019f\21\7\1\0\20\57\1\56\3\57\1\56"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\3\57\1\u01a0\21\57\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\7\57\1\u01a1\15\57"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\4\57\1\u01a2\20\57\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\7\57\1\u01a3\15\57"+
    "\16\0\1\57\5\0\1\57\2\0\3\57\3\0\30\57"+
    "\1\0\3\57\1\u01a4\21\57\16\0\1\57\5\0\1\7"+
    "\2\0\1\7\1\56\1\57\1\0\1\12\1\0\12\7"+
    "\1\u01a5\15\7\1\0\20\57\1\56\3\57\1\56\16\0"+
    "\1\57\31\0\1\u01a6\66\0\1\7\2\0\1\7\1\56"+
    "\1\57\1\0\1\12\1\0\15\7\1\u01a7\12\7\1\0"+
    "\20\57\1\56\3\57\1\56\16\0\1\57\5\0\1\57"+
    "\2\0\3\57\3\0\30\57\1\0\4\57\1\u01a8\20\57"+
    "\16\0\1\57\37\0\1\u01a9\60\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\7\57\1\u01aa\15\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\13\57\1\u01ab\14\57"+
    "\1\0\25\57\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\7\57\1\u01ac\15\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\4\57"+
    "\1\u01ad\20\57\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\10\57\1\u01ae\14\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\7\57"+
    "\1\u01af\15\57\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\10\57\1\u01b0\14\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\4\57"+
    "\1\u01b1\20\57\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\2\7\1\u01b2\25\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\23\0"+
    "\1\u01b3\74\0\1\7\2\0\1\7\1\56\1\57\1\0"+
    "\1\12\1\0\2\7\1\u01b4\25\7\1\0\20\57\1\56"+
    "\3\57\1\56\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\7\57\1\u01b5\15\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\10\57"+
    "\1\u01b6\14\57\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\4\57\1\u01b7\20\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\10\57"+
    "\1\u01b8\14\57\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\7\57\1\u01b9\15\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\10\57"+
    "\1\u01ba\14\57\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\7\57\1\u01bb\15\57\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\15\7\1\u01bc\12\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\20\0\1\u01bd\77\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\4\7\1\u01be"+
    "\23\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\10\57"+
    "\1\u01bf\14\57\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\1\57\1\u01c0\23\57\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\10\57"+
    "\1\u01c1\14\57\16\0\1\57\5\0\1\57\2\0\3\57"+
    "\3\0\30\57\1\0\10\57\1\u01c2\14\57\16\0\1\57"+
    "\5\0\1\7\2\0\1\7\1\56\1\57\1\0\1\12"+
    "\1\0\2\7\1\u01c3\25\7\1\0\20\57\1\56\3\57"+
    "\1\56\16\0\1\57\17\0\1\u01c4\100\0\1\7\2\0"+
    "\1\7\1\56\1\57\1\0\1\12\1\0\5\7\1\u01c5"+
    "\22\7\1\0\20\57\1\56\3\57\1\56\16\0\1\57"+
    "\5\0\1\57\2\0\3\57\3\0\30\57\1\0\2\57"+
    "\1\u01c6\22\57\16\0\1\57\5\0\1\7\2\0\1\7"+
    "\1\56\1\57\1\0\1\12\1\0\12\7\1\u01c7\15\7"+
    "\1\0\20\57\1\56\3\57\1\56\16\0\1\57\37\0"+
    "\1\u01c8\53\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[28500];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\2\11\32\1\6\11\1\1\3\11\1\1\3\11"+
    "\1\1\2\0\1\1\1\0\1\1\1\0\1\11\55\1"+
    "\1\0\1\11\2\1\1\0\11\1\1\0\52\1\1\11"+
    "\4\1\1\0\5\1\1\0\34\1\1\0\15\1\1\0"+
    "\35\1\1\0\47\1\2\0\43\1\2\0\36\1\2\0"+
    "\27\1\2\0\20\1\1\0\3\1\1\0\1\11\13\1"+
    "\1\0\3\1\1\0\12\1\1\0\2\1\1\11\11\1"+
    "\1\0\11\1\1\0\6\1\1\0\3\1\1\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[456];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public AsnLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public AsnLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      {@code false}, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position {@code pos} from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return BAD_CHARACTER;
            } 
            // fall through
          case 90: break;
          case 2: 
            { return WHITE_SPACE;
            } 
            // fall through
          case 91: break;
          case 3: 
            { return MINUS;
            } 
            // fall through
          case 92: break;
          case 4: 
            { return TYPE_CLASS;
            } 
            // fall through
          case 93: break;
          case 5: 
            { return NUMBER_INT;
            } 
            // fall through
          case 94: break;
          case 6: 
            { return VALUE_NAME;
            } 
            // fall through
          case 95: break;
          case 7: 
            { return DOUBLE_QUOTE;
            } 
            // fall through
          case 96: break;
          case 8: 
            { return LPAREN;
            } 
            // fall through
          case 97: break;
          case 9: 
            { return RPAREN;
            } 
            // fall through
          case 98: break;
          case 10: 
            { return LBRACE;
            } 
            // fall through
          case 99: break;
          case 11: 
            { return RBRACE;
            } 
            // fall through
          case 100: break;
          case 12: 
            { return LBRACKET;
            } 
            // fall through
          case 101: break;
          case 13: 
            { return RBRACKET;
            } 
            // fall through
          case 102: break;
          case 14: 
            { return COLON;
            } 
            // fall through
          case 103: break;
          case 15: 
            { return VAR;
            } 
            // fall through
          case 104: break;
          case 16: 
            { return COMMA;
            } 
            // fall through
          case 105: break;
          case 17: 
            { return SEMICOLON;
            } 
            // fall through
          case 106: break;
          case 18: 
            { return DOT;
            } 
            // fall through
          case 107: break;
          case 19: 
            { return OR;
            } 
            // fall through
          case 108: break;
          case 20: 
            { return AT;
            } 
            // fall through
          case 109: break;
          case 21: 
            { return NEW_LINE;
            } 
            // fall through
          case 110: break;
          case 22: 
            { return COMMENT_HEADER;
            } 
            // fall through
          case 111: break;
          case 23: 
            { return USER_TYPE;
            } 
            // fall through
          case 112: break;
          case 24: 
            { return STR_LITERALS;
            } 
            // fall through
          case 113: break;
          case 25: 
            { return OF;
            } 
            // fall through
          case 114: break;
          case 26: 
            { return DOUBLE_DOT;
            } 
            // fall through
          case 115: break;
          case 27: 
            { return COMMENT_LINE;
            } 
            // fall through
          case 116: break;
          case 28: 
            { return NUMBER_FLOAT;
            } 
            // fall through
          case 117: break;
          case 29: 
            { return END;
            } 
            // fall through
          case 118: break;
          case 30: 
            { return SET;
            } 
            // fall through
          case 119: break;
          case 31: 
            { return ANY;
            } 
            // fall through
          case 120: break;
          case 32: 
            { return OID;
            } 
            // fall through
          case 121: break;
          case 33: 
            { return MIN;
            } 
            // fall through
          case 122: break;
          case 34: 
            { return MAX;
            } 
            // fall through
          case 123: break;
          case 35: 
            { return ASSIGMENT;
            } 
            // fall through
          case 124: break;
          case 36: 
            { return COMMENT_MULTILINE;
            } 
            // fall through
          case 125: break;
          case 37: 
            { return NULL;
            } 
            // fall through
          case 126: break;
          case 38: 
            { return REAL;
            } 
            // fall through
          case 127: break;
          case 39: 
            { return SIZE;
            } 
            // fall through
          case 128: break;
          case 40: 
            { return TIME;
            } 
            // fall through
          case 129: break;
          case 41: 
            { return TRUE;
            } 
            // fall through
          case 130: break;
          case 42: 
            { return TAGS;
            } 
            // fall through
          case 131: break;
          case 43: 
            { return FROM;
            } 
            // fall through
          case 132: break;
          case 44: 
            { return DATE;
            } 
            // fall through
          case 133: break;
          case 45: 
            { return WITH;
            } 
            // fall through
          case 134: break;
          case 46: 
            { return CLASS_DEF;
            } 
            // fall through
          case 135: break;
          case 47: 
            { return FALSE;
            } 
            // fall through
          case 136: break;
          case 48: 
            { return BEGIN;
            } 
            // fall through
          case 137: break;
          case 49: 
            { return UNIQUE;
            } 
            // fall through
          case 138: break;
          case 50: 
            { return SYNTAX;
            } 
            // fall through
          case 139: break;
          case 51: 
            { return CHOICE;
            } 
            // fall through
          case 140: break;
          case 52: 
            { return TIME_UTC;
            } 
            // fall through
          case 141: break;
          case 53: 
            { return INTEGER;
            } 
            // fall through
          case 142: break;
          case 54: 
            { return IMPORTS;
            } 
            // fall through
          case 143: break;
          case 55: 
            { return EXPORTS;
            } 
            // fall through
          case 144: break;
          case 56: 
            { return PRIVATE;
            } 
            // fall through
          case 145: break;
          case 57: 
            { return BOOLEAN;
            } 
            // fall through
          case 146: break;
          case 58: 
            { return DEFAULT;
            } 
            // fall through
          case 147: break;
          case 59: 
            { return INSTANCE;
            } 
            // fall through
          case 148: break;
          case 60: 
            { return IMPLICIT;
            } 
            // fall through
          case 149: break;
          case 61: 
            { return EXPLICIT;
            } 
            // fall through
          case 150: break;
          case 62: 
            { return EXTERNAL;
            } 
            // fall through
          case 151: break;
          case 63: 
            { return SEQUENCE;
            } 
            // fall through
          case 152: break;
          case 64: 
            { return OPTIONAL;
            } 
            // fall through
          case 153: break;
          case 65: 
            { return DURATION;
            } 
            // fall through
          case 154: break;
          case 66: 
            { return UNIVERSAL;
            } 
            // fall through
          case 155: break;
          case 67: 
            { return STRING_IA5;
            } 
            // fall through
          case 156: break;
          case 68: 
            { return STRING_BMP;
            } 
            // fall through
          case 157: break;
          case 69: 
            { return DATE_TIME;
            } 
            // fall through
          case 158: break;
          case 70: 
            { return STRING_UTF8;
            } 
            // fall through
          case 159: break;
          case 71: 
            { return ENUMERATED;
            } 
            // fall through
          case 160: break;
          case 72: 
            { return CONTAINING;
            } 
            // fall through
          case 161: break;
          case 73: 
            { return BIT;
            } 
            // fall through
          case 162: break;
          case 74: 
            { return APPLICATION;
            } 
            // fall through
          case 163: break;
          case 75: 
            { return TIME_OF_DAY;
            } 
            // fall through
          case 164: break;
          case 76: 
            { return DEFINITIONS;
            } 
            // fall through
          case 165: break;
          case 77: 
            { return OCTET;
            } 
            // fall through
          case 166: break;
          case 78: 
            { return STRING_NUM;
            } 
            // fall through
          case 167: break;
          case 79: 
            { return STRING_VIS;
            } 
            // fall through
          case 168: break;
          case 80: 
            { return STRING_GEN;
            } 
            // fall through
          case 169: break;
          case 81: 
            { return STRING_GRAPH;
            } 
            // fall through
          case 170: break;
          case 82: 
            { return STRING_VTEXT;
            } 
            // fall through
          case 171: break;
          case 83: 
            { return STRING_TELE;
            } 
            // fall through
          case 172: break;
          case 84: 
            { return STRING_UNI;
            } 
            // fall through
          case 173: break;
          case 85: 
            { return STRING_PR;
            } 
            // fall through
          case 174: break;
          case 86: 
            { return TYPE_IDENTIFIER;
            } 
            // fall through
          case 175: break;
          case 87: 
            { return TIME_GEN;
            } 
            // fall through
          case 176: break;
          case 88: 
            { return CONTENT_SPECIFIC;
            } 
            // fall through
          case 177: break;
          case 89: 
            { return STRING_CHAR;
            } 
            // fall through
          case 178: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
